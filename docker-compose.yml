services:
  postgres:
    image: postgres:15
    container_name: bookstore_postgres
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_USER: bookstore_user
      POSTGRES_PASSWORD: bookstore_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bookstore_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookstore_user -d bookstore"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bookstore_backend
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: bookstore
      DB_USER: bookstore_user
      DB_PASSWORD: bookstore_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bookstore_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bookstore_frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    depends_on:
      - backend
    networks:
      - bookstore_network

volumes:
  postgres_data:

networks:
  bookstore_network:
    driver: bridge
